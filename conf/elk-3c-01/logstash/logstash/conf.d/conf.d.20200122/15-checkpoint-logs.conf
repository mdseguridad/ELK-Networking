filter {
  if [type] == "checkpoint" {
    #Quito el campo host
    mutate {
      remove_field => ["host"]
    }
    grok {
      #match => [ "message", "%{TIMESTAMP_ISO8601}%{SPACE}%{HOSTNAME}%{SPACE}%{HOSTNAME:host.ip}%{SPACE}%{TIMESTAMP_ISO8601:realdate}%{SPACE}%{HOSTNAME}%{SPACE}%{NOTSPACE:process.name}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{GREEDYDATA:raw_message}]" ]
     match => [ "message", "%{TIMESTAMP_ISO8601}%{SPACE}%{HOSTNAME:host.ip}%{SPACE}%{TIMESTAMP_ISO8601:realdate}%{SPACE}%{HOSTNAME}%{SPACE}%{NOTSPACE:process.name}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{GREEDYDATA:raw_message}]" ] 
    }
    # Tratamos el mensaje de CheckPoint
    kv {
      source => "raw_message"
      value_split => "="
      allow_duplicate_values => true
      transform_key => "lowercase"
      remove_char_key => ":"
      prefix => "cp."
    }
    # Ajustamos el tiempo
    date { 
      match => ["realdate", "ISO8601" ] 
      timezone => "Europe/Madrid"
      target => "@timestamp"
     }
    # Ponemos nombre al host
    if ([host.ip] and [host.ip] != "-") {
      translate {
        field => "host.ip"
        destination => "host.name"
        dictionary => {
          "172.22.255.4" => "VS_Internet-3C"
          "172.22.255.28" => "VS_Desarrollo3C"
          "172.22.255.48" => "VS_Validacion-3C"
          "172.25.35.1" => "VS_gcomms3c"
          "172.25.138.1" => "VS_gcommsJC"
          "172.25.138.251" => "fw-extra-sanidad"
          "172.22.255.7" => "fw-extra-institucional"
          "172.22.252.9" => "VS_Clyde"
          "172.22.252.11" => "VS_Julieta"
          "172.25.58.113" => "VS_gestion3c-10G"
          "172.22.255.37" => "VS_CMMA"
          "172.22.251.4" => "VS_Internet-JC"
          "172.25.138.102" => "fw-vsx-jc-01"
          "172.22.252.10" => "VS_PortalesJC"
          "172.22.252.32" => "VS_Saruman"
          "172.22.252.6" => "VS_Jerry"
          "172.22.252.4" => "VS_ERPJC"
         }
       }
     }
  # Modificamos Campos
  mutate {
    rename => { "message" => "event.original"}
  }
  # Duplicado de campos para compatibilidad
  mutate {
    copy => { 
      "cp.dst" => "destination.ip"
      "cp.proto" => "network.transport"
      "cp.s_port" => "source.port"
      "cp.service" => "destination.port"
      "cp.src" => "source.ip"
      "cp.url" => "url.full"
      "cp.user" => "user.name"
      "cp.user_group" => "user.group.name"
      "cp.xlatedst" => "destination.nat.ip"
      "cp.xlatedport" => "destination.nat.port"
      "cp.xlatesport" => "source.nat.port"
      "cp.xlatesrc" => "source.nat.ip"
     }
  }
  mutate {
    copy => {
      "cp.user" => "source.user.full_name"
      "cp.user_group" => "source.user.group.name"
      "cp.dst" => "destination.address"
      "cp.src" => "source.address"
     }
  }
  # Resolucion de origenes y destinos
  # Resolucion del nombre del origen
   if ([source.address] and [source.address] != "-") {
     dns {
         reverse => ["source.address"]
         action => "replace"
         hit_cache_size => 50000
         hit_cache_ttl => 720
         failed_cache_size => 10000
         failed_cache_ttl => 720
         nameserver => ["172.22.253.140", "172.22.253.10"]
        timeout =>5.0 #Just to make sure timeout is not the problem here
      }
   }
   # Resolucion del nombre del origen
   if ([destination.address] and [destination.address] != "-") {
       dns {
         reverse => ["destination.address"]
         action => "replace"
         hit_cache_size => 50000
         hit_cache_ttl => 720
         failed_cache_size => 10000
         failed_cache_ttl => 720
         nameserver => ["172.22.253.140", "172.22.253.10"]
        timeout =>5.0 #Just to make sure timeout is not the problem here
       }
    }
   # Datos geo del destino
   if [destination.ip] and [destination.ip] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {
            geoip {
                source => "destination.ip"
                target => "destination.geo"
            }

            # Delete 0,0 in destination.geo.location if equal to 0,0
            if ([destination.geo.location] and [destination.geo.location] =~ "0,0") {
                mutate {
                    replace => [ "destination.geo.location", "" ]
                }
            }
    }
   # Datos geo del origen
   if [source.ip] and [source.ip] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {
            geoip {
                source => "source.ip"
                target => "source.geo"
            }

            # Delete 0,0 in source.geo.location if equal to 0,0
            if ([source.geo.location] and [source.geo.location] =~ "0,0") {
                mutate {
                    replace => [ "source.geo.location", "" ]
                }
            }
    }

  # Quitamos campos no utiles
  mutate {
        remove_field => ["raw_message", "realdate", "port"]
  }
 }#fin del if checkpoint
}#Fin del filter
