filter {
  if [type] == "checkpoint" {
    #Quito el campo host
    mutate {
      remove_field => ["host"]
    }
    grok {
      #match => [ "message", "%{TIMESTAMP_ISO8601}%{SPACE}%{HOSTNAME}%{SPACE}%{HOSTNAME:host.ip}%{SPACE}%{TIMESTAMP_ISO8601:realdate}%{SPACE}%{HOSTNAME}%{SPACE}%{NOTSPACE:process.name}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{GREEDYDATA:raw_message}]" ]
     match => [ "message", "%{TIMESTAMP_ISO8601}%{SPACE}%{HOSTNAME:host.ip}%{SPACE}%{TIMESTAMP_ISO8601:realdate}%{SPACE}%{HOSTNAME}%{SPACE}%{NOTSPACE:process.name}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{NOTSPACE}%{SPACE}%{GREEDYDATA:raw_message}]" ] 
    }
    # Tratamos el mensaje de CheckPoint
    kv {
      source => "raw_message"
      value_split => "="
      allow_duplicate_values => true
      transform_key => "lowercase"
      remove_char_key => ":"
      prefix => "cp."
    }
    # Ajustamos el tiempo
    date { 
      match => ["realdate", "ISO8601" ] 
      timezone => "Europe/Madrid"
      target => "@timestamp"
     }
    # Ponemos nombre al host
    if ([host.ip] and [host.ip] != "-") {
      translate {
        field => "host.ip"
        destination => "host.name"
        dictionary => {
          "172.22.255.4" => "VS_Internet-3C"
          "172.22.255.28" => "VS_Desarrollo3C"
          "172.22.255.48" => "VS_Validacion-3C"
          "172.25.35.1" => "VS_gcomms3c"
          "172.25.138.1" => "VS_gcommsJC"
          "172.25.138.251" => "fw-extra-sanidad"
          "172.22.255.7" => "fw-extra-institucional"
          "172.22.252.9" => "VS_Clyde"
          "172.22.252.11" => "VS_Julieta"
          "172.25.58.113" => "VS_gestion3c-10G"
          "172.22.255.37" => "VS_CMMA"
          "172.22.251.4" => "VS_Internet-JC"
          "172.25.138.102" => "fw-vsx-jc-01"
          "172.22.252.10" => "VS_PortalesJC"
          "172.22.252.32" => "VS_Saruman"
          "172.22.252.6" => "VS_Jerry"
          "172.22.252.4" => "VS_ERPJC"
         }
       }
     }
  # Modificamos Campos
  mutate {
    rename => { "message" => "event.original"}
  }
  # Duplicado de campos para compatibilidad
  mutate {
    copy => { 
      "cp.dst" => "destination.ip"
      "cp.proto" => "network.iana_number"
      "cp.s_port" => "source.port"
      "cp.service" => "destination.port"
      "cp.service_id" => "network.protocol"
      "cp.src" => "source.ip"
      "cp.url" => "url.full"
      "cp.user" => "user.name"
      "cp.user_group" => "user.group.name"
      "cp.xlatedst" => "destination.nat.ip"
      "cp.xlatedport" => "destination.nat.port"
      "cp.xlatesport" => "source.nat.port"
      "cp.xlatesrc" => "source.nat.ip"
     }
  }
  mutate {
    copy => {
      "cp.user" => "source.user.full_name"
      "cp.user_group" => "source.user.group.name"
      "cp.dst" => "destination.address"
      "cp.src" => "source.address"
     }
  }
  # Nombrado del protocolo
  translate {
    field => "network.iana_number"
    destination => "network.transport"
    dictionary => {
      "0" => "hopopt"
      "1" => "icmp"
      "2" => "igmp"
      "3" => "ggp"
      "4" => "ipv4"
      "5" => "st"
      "6" => "tcp"
      "7" => "cbt"
      "8" => "egp"
      "9" => "igp"
      "10" => "bbn-rcc-mon"
      "11" => "nvp-ii"
      "12" => "pup"
      "13" => "argus (deprecated)"
      "14" => "emcon"
      "15" => "xnet"
      "16" => "chaos"
      "17" => "udp"
      "18" => "mux"
      "19" => "dcn-meas"
      "20" => "hmp"
      "21" => "prm"
      "22" => "xns-idp"
      "23" => "trunk-1"
      "24" => "trunk-2"
      "25" => "leaf-1"
      "26" => "leaf-2"
      "27" => "rdp"
      "28" => "irtp"
      "29" => "iso-tp4"
      "30" => "netblt"
      "31" => "mfe-nsp"
      "32" => "merit-inp"
      "33" => "dccp"
      "34" => "3pc"
      "35" => "idpr"
      "36" => "xtp"
      "37" => "ddp"
      "38" => "idpr-cmtp"
      "39" => "tp++"
      "40" => "il"
      "41" => "ipv6"
      "42" => "sdrp"
      "43" => "ipv6-route"
      "44" => "ipv6-frag"
      "45" => "idrp"
      "46" => "rsvp"
      "47" => "gre"
      "48" => "dsr"
      "49" => "bna"
      "50" => "esp"
      "51" => "ah"
      "52" => "i-nlsp"
      "53" => "swipe (deprecated)"
      "54" => "narp"
      "55" => "mobile"
      "56" => "tlsp"
      "57" => "skip"
      "58" => "ipv6-icmp"
      "59" => "ipv6-nonxt"
      "60" => "ipv6-opts"
      "62" => "cftp"
      "64" => "sat-expak"
      "65" => "kryptolan"
      "66" => "rvd"
      "67" => "ippc"
      "69" => "sat-mon"
      "70" => "visa"
      "71" => "ipcv"
      "72" => "cpnx"
      "73" => "cphb"
      "74" => "wsn"
      "75" => "pvp"
      "76" => "br-sat-mon"
      "77" => "sun-nd"
      "78" => "wb-mon"
      "79" => "wb-expak"
      "80" => "iso-ip"
      "81" => "vmtp"
      "82" => "secure-vmtp"
      "83" => "vines"
      "84" => "ttp"
      "86" => "dgp"
      "87" => "tcf"
      "88" => "eigrp"
      "89" => "ospfigp"
      "90" => "sprite-rpc"
      "91" => "larp"
      "92" => "mtp"
      "93" => "ax.25"
      "94" => "ipip"
      "95" => "micp (deprecated)"
      "96" => "scc-sp"
      "97" => "etherip"
      "98" => "encap"
      "100" => "gmtp"
      "101" => "ifmp"
      "102" => "pnni"
      "103" => "pim"
      "104" => "aris"
      "105" => "scps"
      "106" => "qnx"
      "108" => "ipcomp"
      "109" => "snp"
      "110" => "compaq-peer"
      "111" => "ipx-in-ip"
      "112" => "vrrp"
      "113" => "pgm"
      "115" => "l2tp"
      "116" => "ddx"
      "117" => "iatp"
      "118" => "stp"
      "119" => "srp"
      "120" => "uti"
      "121" => "smp"
      "122" => "sm (deprecated)"
      "123" => "ptp"
      "124" => "isis over ipv4"
      "125" => "fire"
      "126" => "crtp"
      "127" => "crudp"
      "128" => "sscopmce"
      "129" => "iplt"
      "130" => "sps"
      "131" => "pipe"
      "132" => "sctp"
      "133" => "fc"
      "134" => "rsvp-e2e-ignore"
      "135" => "mobility header"
      "136" => "udplite"
      "137" => "mpls-in-ip"
      "138" => "manet"
      "139" => "hip"
      "140" => "shim6"
      "141" => "wesp"
      "142" => "rohc"
      "255" => "reserved"
      }
   fallback => "%{network.iana_number}"
  }

  # Resolucion de origenes y destinos
  # Resolucion del nombre del origen
   if ([source.address] and [source.address] =~ /(?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])/ ) {
     dns {
         reverse => ["source.address"]
         action => "replace"
         hit_cache_size => 50000
         hit_cache_ttl => 720
         failed_cache_size => 10000
         failed_cache_ttl => 720
         nameserver => ["172.22.253.140", "172.22.253.10"]
        timeout =>0.5 #Just to make sure timeout is not the problem here
      }
   }
   # Resolucion del nombre del origen
   if ([destination.address] and [destination.address] =~ /(?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])/) {
       dns {
         reverse => ["destination.address"]
         action => "replace"
         hit_cache_size => 50000
         hit_cache_ttl => 720
         failed_cache_size => 10000
         failed_cache_ttl => 720
         nameserver => ["172.22.253.140", "172.22.253.10"]
        timeout =>0.5 #Just to make sure timeout is not the problem here
       }
    }
   # Datos geo del destino
   if [destination.ip] and [destination.ip] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {
            geoip {
                source => "destination.ip"
                target => "destination.geo"
            }

            # Delete 0,0 in destination.geo.location if equal to 0,0
            if ([destination.geo.location] and [destination.geo.location] =~ "0,0") {
                mutate {
                    replace => [ "destination.geo.location", "" ]
                }
            }
    }
   # Datos geo del origen
   if [source.ip] and [source.ip] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {
            geoip {
                source => "source.ip"
                target => "source.geo"
            }

            # Delete 0,0 in source.geo.location if equal to 0,0
            if ([source.geo.location] and [source.geo.location] =~ "0,0") {
                mutate {
                    replace => [ "source.geo.location", "" ]
                }
            }
    }

  # Quitamos campos no utiles
  mutate {
        remove_field => ["raw_message", "realdate", "port"]
  }
 }#fin del if checkpoint
}#Fin del filter
